import React from 'react'
import { WagmiConfig, createClient, configureChains } from 'wagmi'
import { alchemyProvider } from 'wagmi/providers/alchemy'
import { CoinbaseWalletConnector } from 'wagmi/connectors/coinbaseWallet'
import { WalletConnectConnector } from 'wagmi/connectors/walletConnect'
// import { polygonMumbai, polygon, mainnet } from '@wagmi/chains';
import { InjectedConnector } from 'wagmi/connectors/injected'
import Web3AuthConnectorInstance from './Wagmi/Web3AuthConnectorInstance'
import { publicProvider } from 'wagmi/providers/public'
// import { getDefaultWallets, RainbowKitProvider } from '@rainbow-me/rainbowkit';
import { currentWagmiChain, AlchemyProviderPolygonTestnetAPIKey } from '@config'

// Configure chains & providers with the Alchemy provider.
let { chains, provider, webSocketProvider } = configureChains(
  [currentWagmiChain],
  [
    alchemyProvider({ apiKey: AlchemyProviderPolygonTestnetAPIKey }),
    publicProvider() //fallback provider
  ]
)

const wagmiClient = createClient({
  autoConnect: true,
  connectors: [
    new CoinbaseWalletConnector({
      chains,
      options: {
        appName: 'wagmi'
      }
    }),
    new WalletConnectConnector({
      chains,
      options: {
        qrcode: true
      }
    }),
    new InjectedConnector({
      chains,
      options: {
        name: 'Injected',
        shimDisconnect: true
      }
    }),
    Web3AuthConnectorInstance(chains) //returns web3auth connector
  ],
  provider,
  webSocketProvider
})

interface WagmiProviderProps {
  children: React.ReactNode
}

export const WagmiProvider: React.FC<WagmiProviderProps> = ({ children }) => {
  return <WagmiConfig client={wagmiClient}>{children}</WagmiConfig>
}
